apiVersion: v1
kind: Service
metadata:
  name: myoung-service-test
spec:
  selector:
    app: myoung-nginx-label
  type: NodePort
  ports:
    - name: http
      port: 7777 
      protocol: TCP
      targetPort: 80 #실제로 서비스하는 내부 port
      nodePort: 30036 #type 이 Nodeport 일 경우 사용



# https://kubernetes.io/ko/docs/tutorials/kubernetes-basics/expose/expose-intro/
# Service 내부 Pod을 외부 네트워크와 연결해주고 여러 개의 Pod을 바라보는 내부 로드 밸런서를 생성할 때 사용함 내부 DNS에 서비스 이름을 도메인으로 등록하기 때문에 서비스 디스커버리 역할도 수행
# kubectl apply -f 2.myoung-service-Node-deploy.yaml 입력
# 생성후 상태확인 정보는 kubectl get svc [service 이름] 또는 kubectl describe svc [service 이름] 입력
# type 종류에는 ClusterIP(default 설정), NodePort, loadBalancer 가 있다
# ClusterIP는 외부에서는 접속이 불가능하며 오직 service 후 생성되는 clusterip:port 를 통해서만 접속이 가능
# NodePort는 NAT가 이용되는 클러스터 내에서 각각 선택된 노드들의 동일한 포트에 서비스를 노출시켜 <NodeIP>:<NodePort>를 이용하여 클러스터 외부로부터 서비스가 접근할 수 있도록 해줌 CluserIP의 상위 집합이다? .
# LoadBalancer - (지원 가능한 경우) 기존 클라우드에서 외부용 로드밸런서를 생성하고 서비스에 고정된 공인 IP를 할당해줌 NodePort의 상위 집합.
# ExternalName - 이름으로 CNAME 레코드를 반환함으로써 임의의 이름(스펙에서 externalName으로 명시)을 이용하여 서비스를 노출시킴, 프록시는 사용되지 않는다. 이 방식은 kube-dns 버전 1.7 이상에서 지원 가능하다.